name: Org-wide Default Auto Close Issues

on:
  push:

permissions:
  issues: write
  contents: read

jobs:
  close-issue-from-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Close issues based on commit message
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const keywords = [
              'close', 'closes', 'closed',
              'fix', 'fixes', 'fixed',
              'resolve', 'resolves', 'resolved'
            ];
            // 支援 "fixes: #123" / "resolve - #456" / "closed #789"
            const issueRegex = new RegExp(`\\b(?:${keywords.join('|')})[:\\s-]*#(\\d+)`, 'gi');

            const commits = context.payload.commits;
            if (!Array.isArray(commits) || commits.length === 0) {
              console.log("No commits found in push payload. Exiting.");
              return;
            }

            const toClose = new Set();

            for (const commit of commits) {
              const matches = commit.message.matchAll(issueRegex);
              for (const match of matches) {
                const issueNumber = parseInt(match[1], 10);
                if (!isNaN(issueNumber)) {
                  toClose.add(issueNumber);
                  console.log(`Found reference to issue #${issueNumber} in commit ${commit.id}`);
                }
              }
            }

            if (toClose.size === 0) {
              console.log("No issues matched in commit messages.");
              return;
            }

            for (const issueNumber of toClose) {
              try {
                // 先檢查是不是 PR
                const issue = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber
                });
                if (issue.data.pull_request) {
                  console.log(`Skipping #${issueNumber} (it's a PR).`);
                  continue;
                }

                // 關閉 issue
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  state: 'closed'
                });

                // 留言通知
                const commentBody = `此問題已在提交 [${issueNumber}](${issue.data.html_url}) 中被自動關閉。`;
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: commentBody
                });

                console.log(`Closed issue #${issueNumber} successfully.`);
              } catch (error) {
                console.error(`Failed to process issue #${issueNumber}. Error: ${error.message}`);
              }
            }
